var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "decorateProperty", ()=>o
);
parcelHelpers.export(exports, "legacyPrototypeMethod", ()=>e
);
parcelHelpers.export(exports, "standardPrototypeMethod", ()=>t
);
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ const e = (e1, t, o)=>{
    Object.defineProperty(t, o, e1);
}, t = (e1, t1)=>({
        kind: "method",
        placement: "prototype",
        key: t1.key,
        descriptor: e1
    })
, o = ({ finisher: e1 , descriptor: t1  })=>(o1, n)=>{
        var r;
        if ((void 0) === n) {
            const n1 = null !== (r = o1.originalKey) && (void 0) !== r ? r : o1.key, i = null != t1 ? {
                kind: "method",
                placement: "prototype",
                key: n1,
                descriptor: t1(o1.key)
            } : {
                ...o1,
                key: n1
            };
            return null != e1 && (i.finisher = function(t2) {
                e1(t2, n1);
            }), i;
        }
        {
            const r1 = o1.constructor;
            (void 0) !== t1 && Object.defineProperty(o1, n, t1(n)), null == e1 || e1(r1, n);
        }
    }
;
