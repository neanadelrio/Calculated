var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSSResult", ()=>_cssTagJs.CSSResult
);
parcelHelpers.export(exports, "adoptStyles", ()=>_cssTagJs.adoptStyles
);
parcelHelpers.export(exports, "css", ()=>_cssTagJs.css
);
parcelHelpers.export(exports, "getCompatibleStyle", ()=>_cssTagJs.getCompatibleStyle
);
parcelHelpers.export(exports, "supportsAdoptingStyleSheets", ()=>_cssTagJs.supportsAdoptingStyleSheets
);
parcelHelpers.export(exports, "unsafeCSS", ()=>_cssTagJs.unsafeCSS
);
parcelHelpers.export(exports, "ReactiveElement", ()=>a
);
parcelHelpers.export(exports, "defaultConverter", ()=>o
);
parcelHelpers.export(exports, "notEqual", ()=>n
);
var _cssTagJs = require("./css-tag.js");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */ var s1, e1, h, r;
const o = {
    toAttribute (t, i) {
        switch(i){
            case Boolean:
                t = t ? "" : null;
                break;
            case Object:
            case Array:
                t = null == t ? t : JSON.stringify(t);
        }
        return t;
    },
    fromAttribute (t, i) {
        let s1 = t;
        switch(i){
            case Boolean:
                s1 = null !== t;
                break;
            case Number:
                s1 = null === t ? null : Number(t);
                break;
            case Object:
            case Array:
                try {
                    s1 = JSON.parse(t);
                } catch (t) {
                    s1 = null;
                }
        }
        return s1;
    }
}, n = (t, i)=>i !== t && (i == i || t == t)
, l = {
    attribute: !0,
    type: String,
    converter: o,
    reflect: !1,
    hasChanged: n
};
class a extends HTMLElement {
    constructor(){
        super(), this.Πi = new Map, this.Πo = void 0, this.Πl = void 0, this.isUpdatePending = !1, this.hasUpdated = !1, this.Πh = null, this.u();
    }
    static addInitializer(t) {
        var i;
        null !== (i = this.v) && (void 0) !== i || (this.v = []), this.v.push(t);
    }
    static get observedAttributes() {
        this.finalize();
        const t = [];
        return this.elementProperties.forEach((i, s1)=>{
            const e1 = this.Πp(s1, i);
            (void 0) !== e1 && (this.Πm.set(e1, s1), t.push(e1));
        }), t;
    }
    static createProperty(t, i = l) {
        if (i.state && (i.attribute = !1), this.finalize(), this.elementProperties.set(t, i), !i.noAccessor && !this.prototype.hasOwnProperty(t)) {
            const s1 = "symbol" == typeof t ? Symbol() : "__" + t, e1 = this.getPropertyDescriptor(t, s1, i);
            (void 0) !== e1 && Object.defineProperty(this.prototype, t, e1);
        }
    }
    static getPropertyDescriptor(t, i, s) {
        return {
            get () {
                return this[i];
            },
            set (e) {
                const h1 = this[t];
                this[i] = e, this.requestUpdate(t, h1, s);
            },
            configurable: !0,
            enumerable: !0
        };
    }
    static getPropertyOptions(t) {
        return this.elementProperties.get(t) || l;
    }
    static finalize() {
        if (this.hasOwnProperty("finalized")) return !1;
        this.finalized = !0;
        const t = Object.getPrototypeOf(this);
        if (t.finalize(), this.elementProperties = new Map(t.elementProperties), this.Πm = new Map, this.hasOwnProperty("properties")) {
            const t1 = this.properties, i = [
                ...Object.getOwnPropertyNames(t1),
                ...Object.getOwnPropertySymbols(t1)
            ];
            for (const s2 of i)this.createProperty(s2, t1[s2]);
        }
        return this.elementStyles = this.finalizeStyles(this.styles), !0;
    }
    static finalizeStyles(i) {
        const s2 = [];
        if (Array.isArray(i)) {
            const e2 = new Set(i.flat(1 / 0).reverse());
            for (const i of e2)s2.unshift(_cssTagJs.getCompatibleStyle(i));
        } else (void 0) !== i && s2.push(_cssTagJs.getCompatibleStyle(i));
        return s2;
    }
    static Πp(t, i) {
        const s2 = i.attribute;
        return !1 === s2 ? void 0 : "string" == typeof s2 ? s2 : "string" == typeof t ? t.toLowerCase() : void 0;
    }
    u() {
        var t;
        this.Πg = new Promise((t1)=>this.enableUpdating = t1
        ), this.L = new Map, this.Π_(), this.requestUpdate(), null === (t = this.constructor.v) || (void 0) === t || t.forEach((t1)=>t1(this)
        );
    }
    addController(t) {
        var i, s2;
        (null !== (i = this.ΠU) && (void 0) !== i ? i : this.ΠU = []).push(t), (void 0) !== this.renderRoot && this.isConnected && (null === (s2 = t.hostConnected) || (void 0) === s2 || s2.call(t));
    }
    removeController(t) {
        var i;
        null === (i = this.ΠU) || (void 0) === i || i.splice(this.ΠU.indexOf(t) >>> 0, 1);
    }
    Π_() {
        this.constructor.elementProperties.forEach((t, i)=>{
            this.hasOwnProperty(i) && (this.Πi.set(i, this[i]), delete this[i]);
        });
    }
    createRenderRoot() {
        var t;
        const s3 = null !== (t = this.shadowRoot) && (void 0) !== t ? t : this.attachShadow(this.constructor.shadowRootOptions);
        return _cssTagJs.adoptStyles(s3, this.constructor.elementStyles), s3;
    }
    connectedCallback() {
        var t;
        (void 0) === this.renderRoot && (this.renderRoot = this.createRenderRoot()), this.enableUpdating(!0), null === (t = this.ΠU) || (void 0) === t || t.forEach((t1)=>{
            var i;
            return null === (i = t1.hostConnected) || (void 0) === i ? void 0 : i.call(t1);
        }), this.Πl && (this.Πl(), this.Πo = this.Πl = void 0);
    }
    enableUpdating(t) {
    }
    disconnectedCallback() {
        var t;
        null === (t = this.ΠU) || (void 0) === t || t.forEach((t1)=>{
            var i;
            return null === (i = t1.hostDisconnected) || (void 0) === i ? void 0 : i.call(t1);
        }), this.Πo = new Promise((t1)=>this.Πl = t1
        );
    }
    attributeChangedCallback(t, i, s) {
        this.K(t, s);
    }
    Πj(t, i, s = l) {
        var e2, h1;
        const r1 = this.constructor.Πp(t, s);
        if ((void 0) !== r1 && !0 === s.reflect) {
            const n1 = (null !== (h1 = null === (e2 = s.converter) || (void 0) === e2 ? void 0 : e2.toAttribute) && (void 0) !== h1 ? h1 : o.toAttribute)(i, s.type);
            this.Πh = t, null == n1 ? this.removeAttribute(r1) : this.setAttribute(r1, n1), this.Πh = null;
        }
    }
    K(t, i) {
        var s3, e3, h2;
        const r1 = this.constructor, n1 = r1.Πm.get(t);
        if ((void 0) !== n1 && this.Πh !== n1) {
            const t = r1.getPropertyOptions(n1), l1 = t.converter, a1 = null !== (h2 = null !== (e3 = null === (s3 = l1) || (void 0) === s3 ? void 0 : s3.fromAttribute) && (void 0) !== e3 ? e3 : "function" == typeof l1 ? l1 : null) && (void 0) !== h2 ? h2 : o.fromAttribute;
            this.Πh = n1, this[n1] = a1(i, t.type), this.Πh = null;
        }
    }
    requestUpdate(t, i, s) {
        let e4 = !0;
        (void 0) !== t && (((s = s || this.constructor.getPropertyOptions(t)).hasChanged || n)(this[t], i) ? (this.L.has(t) || this.L.set(t, i), !0 === s.reflect && this.Πh !== t && ((void 0) === this.Πk && (this.Πk = new Map), this.Πk.set(t, s))) : e4 = !1), !this.isUpdatePending && e4 && (this.Πg = this.Πq());
    }
    async Πq() {
        this.isUpdatePending = !0;
        try {
            for(await this.Πg; this.Πo;)await this.Πo;
        } catch (t) {
            Promise.reject(t);
        }
        const t = this.performUpdate();
        return null != t && await t, !this.isUpdatePending;
    }
    performUpdate() {
        var t;
        if (!this.isUpdatePending) return;
        this.hasUpdated, this.Πi && (this.Πi.forEach((t1, i)=>this[i] = t1
        ), this.Πi = void 0);
        let i = !1;
        const s4 = this.L;
        try {
            i = this.shouldUpdate(s4), i ? (this.willUpdate(s4), null === (t = this.ΠU) || (void 0) === t || t.forEach((t1)=>{
                var i1;
                return null === (i1 = t1.hostUpdate) || (void 0) === i1 ? void 0 : i1.call(t1);
            }), this.update(s4)) : this.Π$();
        } catch (t1) {
            throw i = !1, this.Π$(), t1;
        }
        i && this.E(s4);
    }
    willUpdate(t) {
    }
    E(t) {
        var i2;
        null === (i2 = this.ΠU) || (void 0) === i2 || i2.forEach((t)=>{
            var i3;
            return null === (i3 = t.hostUpdated) || (void 0) === i3 ? void 0 : i3.call(t);
        }), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(t)), this.updated(t);
    }
    Π$() {
        this.L = new Map, this.isUpdatePending = !1;
    }
    get updateComplete() {
        return this.getUpdateComplete();
    }
    getUpdateComplete() {
        return this.Πg;
    }
    shouldUpdate(t) {
        return !0;
    }
    update(t) {
        (void 0) !== this.Πk && (this.Πk.forEach((t, i4)=>this.Πj(i4, this[i4], t)
        ), this.Πk = void 0), this.Π$();
    }
    updated(t) {
    }
    firstUpdated(t) {
    }
}
a.finalized = !0, a.shadowRootOptions = {
    mode: "open"
}, null === (e1 = (s1 = globalThis).reactiveElementPlatformSupport) || (void 0) === e1 || e1.call(s1, {
    ReactiveElement: a
}), (null !== (h = (r = globalThis).reactiveElementVersions) && (void 0) !== h ? h : r.reactiveElementVersions = []).push("1.0.0-rc.1");
