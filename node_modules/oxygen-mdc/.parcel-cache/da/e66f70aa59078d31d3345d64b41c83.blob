var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Singleton API for registering and requesting icons.
 */ parcelHelpers.export(exports, "OxyIconset", ()=>OxyIconset
);
var _lit = require("lit");
// The global icon set registry.
let registry = new Map(); // Returns the fallback icon.
function getFallbackIcon() {
    return _lit.svg`<path d="M0 0h1L24 23v1h-1L0 1Z M24 0v1L1 24h-1v-1L23 0Z"></path>`;
}
class OxyIconset {
    // Registers an icon set.
    static registerIconset(iconsetName, icons) {
        if (registry.has(iconsetName)) throw `Iconset ${iconsetName} already registered`;
        registry.set(iconsetName, icons);
    }
    static getIcon(iconsetName, iconName) {
        const icons = registry.get(iconsetName);
        if (!icons) return getFallbackIcon();
        return icons[iconName] || getFallbackIcon();
    }
    static getIconsetNames() {
        let names = [];
        for (let name of registry.keys())names.push(name);
        return names;
    }
    static getIconNames(iconsetName) {
        let map = registry.get(iconsetName);
        return !!map ? Object.keys(map) : [];
    }
}
