var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { LitElement, css, html } from 'lit';
import { customElement, property } from 'lit/decorators';
import { OxyIconset } from './oxy-iconset';
/**
 * A simple element to display an icon. Icons have to be registered using icon
 * sets first. An icon is specified using the set and icon name, e.g.:
 *
 *   <oxy-icon icon="image:photo"></oxy-icon>
 *
 * To ensure the icon set is loaded, it must be imported in the client.
 */
let OxyIcon = class OxyIcon extends LitElement {
    constructor() {
        super(...arguments);
        this.icon = '';
    }
    static get styles() {
        return css `
      :host {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        fill: currentcolor;
        stroke: none;
        stroke-width: 0;
        width: 24px;
        height: 24px;
      }
      svg {
        display: block;
        width: 100%;
        height: 100%
      }
    `;
    }
    render() {
        const parts = this.icon.split(':');
        const iconsetName = parts[0] || '';
        const iconName = parts[1] || '';
        const groupSpec = OxyIconset.getIcon(iconsetName, iconName);
        return html `
      <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          preserveAspectRatio="xMidYMid meet">
        <g>${groupSpec}</g>
      </svg>`;
    }
};
__decorate([
    property({ type: String })
], OxyIcon.prototype, "icon", void 0);
OxyIcon = __decorate([
    customElement('oxy-icon')
], OxyIcon);
export { OxyIcon };
