import { LitElement } from 'lit';
/**
 * A simple dialog custom element.
 *
 * - Attribute 'backdrop': Makes a modal dialg (prevent clicks on background).
 * - Attribute 'noescape': Disables ESC key or click on backdrop to close.
 * - Attribute 'opened': Controls the open/closed state of the dialog.
 * - Call open() or close() to open/close the dialog.
 * - Events 'opened' and 'closed' are fired on open/close.
 *
 * Focus trapping is currently not implemented. Which means that focus can
 * leave the dialog, and focus is not reset after the dialog is closed.
 */
export declare class OxyDialog extends LitElement {
    static get styles(): import("lit").CSSResultGroup;
    private readonly keyListener;
    private savedFocus;
    backdropElem: HTMLElement | undefined;
    dialogElem: HTMLElement | undefined;
    opened: boolean;
    heading: string;
    backdrop: boolean;
    noescape: boolean;
    showBackdrop: boolean;
    updated(changedProps: Map<string, any>): void;
    render(): import("lit-html").TemplateResult<1>;
    open(): void;
    close(): void;
    private afterOpen;
    private afterClose;
    private addKeyListener;
    private removeKeyListener;
    private onBackdropClick;
    private onKeydown;
    private onEscapePress;
    private saveAndMoveFocus;
    private restoreFocus;
    private onTabPress;
}
